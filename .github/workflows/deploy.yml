name: Deploy Dapp to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install pnpm (no Corepack required)
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Show versions
        run: |
          node -v
          pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Install deps at workspace root so pnpm links packages/* and apps/*
      - name: Install dependencies (workspace)
        run: |
          pnpm config set store-dir ~/.pnpm-store
          pnpm install --frozen-lockfile

      # Build SDK first so it's available for web
      - name: Build SDK
        run: pnpm -w --filter "@trustswap/sdk" build

      # Build the web app (vite)
      - name: Build web
        run: pnpm -w --filter "./apps/web" run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
